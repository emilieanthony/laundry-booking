{
	"info": {
		"_postman_id": "e913c8ee-6ac1-4e0b-945e-dc670d01d5af",
		"name": "server",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Create",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"user can log in\", function() {",
									"    pm.response.to.have.status(201);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"userId\", jsonData._id);",
									"    pm.environment.set(\"token\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jane@doe.io\",\n    \"name\": \"Johan Doe\",\n    \"password\": \"janedoe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"user can log in\", function() {",
									"    pm.response.to.have.status(200);",
									"    var jsonData = pm.response.json();",
									"    pm.environment.set(\"token\", jsonData.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"jane@doe.io\",\n    \"name\": \"Johan Doe\",\n    \"password\": \"janedoe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/login",
							"host": [
								"{{host}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Booking with User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    var jsonData = pm.response.json();",
									"    var body = JSON.parse(request.data)",
									"    pm.expect(jsonData.date).to.eql(body.date);",
									"    pm.expect(jsonData.name).to.eql(body.user);",
									"    pm.environment.set(\"bookingId\", jsonData._id);",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"date\": \"2021-11-05T14:00:00.000Z\",\n    \"laundryroom\": \"South\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/{{userId}}/bookings",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    var jsonData = pm.response.json();",
									"    var body = JSON.parse(request.data)",
									"    pm.expect(jsonData.headline).to.eql(body.headline);",
									"    pm.expect(jsonData.content).to.eql(body.content);",
									"    pm.expect(jsonData.writer).to.eql(body.writer);",
									"    pm.environment.set(\"noteID\", jsonData._id);    ",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"headline\": \"To do list\",\n    \"content\": \"Clean, laundry, dishes, cook\",\n    \"writer\": \"Sam\"\n\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notes",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Notification",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"response should have valid JSON data\", function() {",
									"    var jsonData = pm.response.json();",
									"    var body = JSON.parse(request.data)",
									"    pm.environment.set(\"notificationId\", jsonData._id);",
									"    pm.expect(jsonData.content).to.eql(body.content);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"New notification\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/{{userId}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Read",
			"item": [
				{
					"name": "Get All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{host}}/bookings",
							"host": [
								"{{host}}"
							],
							"path": [
								"bookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all bookings for a user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/{{userId}}/bookings?sort=asc",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"bookings"
							],
							"query": [
								{
									"key": "sort",
									"value": "asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Booking by Id for a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/{{userId}}/bookings/{{bookingId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"bookings",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notes",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Note by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/notes/{{noteID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes",
								"{{noteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Notifications for a User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{host}}/users/{{userId}}/notifications",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"notifications"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update",
			"item": [
				{
					"name": "Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"Cookie John Dough\",\n    \"email\": \"cookie@dough.io\",\n    \"password\": \"dough\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially Update User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"name\": \"John Doe\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"headline\": \"Done!\",\n    \"content\": \"Clean, laundry, dishes\",\n    \"writer\": \"Sam\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notes/{{noteID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes",
								"{{noteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Partially Update Note",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Laundry booking, cooking\"\n    }",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/notes/{{noteID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes",
								"{{noteID}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete",
			"item": [
				{
					"name": "Delete Booking by Id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{host}}/users/{{userId}}/bookings/{{bookingId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}",
								"bookings",
								"{{bookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/users/{{userId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"users",
								"{{userId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/users",
							"host": [
								"{{host}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete All Notes",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/notes",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Note by ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/notes/{{noteID}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"notes",
								"{{noteID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete notifications by id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"response is CREATED\", function() {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 404]);",
									"}); "
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{host}}/notifications/{{notificationId}}",
							"host": [
								"{{host}}"
							],
							"path": [
								"notifications",
								"{{notificationId}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "host",
			"value": "\nhttp://localhost:3000/api"
		}
	]
}